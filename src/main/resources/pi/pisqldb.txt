ALTER TABLE IF EXISTS empresa.empresa ADD COLUMN if not exists tipo_sistema character varying(1) NOT NULL DEFAULT 'C';
ALTER TABLE IF EXISTS empresa.sucursal ADD COLUMN if not exists atencion_automatica boolean NOT NULL DEFAULT true;
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists tipo_control character varying(1) NOT NULL DEFAULT 'C';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists costo_ultima_compra numeric(18,4) NOT NULL DEFAULT 0;
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists precio numeric(18,4) NOT NULL DEFAULT 0;
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists codigo_barras2 character varying(255) NOT NULL DEFAULT '-';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists codigo_ubicacion character varying(255) NOT NULL DEFAULT '-';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists registro_sanitario character varying(255) NOT NULL DEFAULT '-';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists cod_dig character varying(255) NOT NULL DEFAULT '-';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists unidad_conversion integer;
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists factor_conversion numeric(18,2) NOT NULL DEFAULT 1;
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists procedencia character varying(1) NOT NULL DEFAULT 'N';
ALTER TABLE IF EXISTS logistica.producto ADD COLUMN if not exists impuesto integer NOT NULL DEFAULT 1;
ALTER TABLE IF EXISTS persona.persona ADD COLUMN if not exists es_proveedor boolean NOT NULL DEFAULT false;
--para la tabla articulo
CREATE TABLE IF NOT EXISTS logistica.articulo
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    estado character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'K'::character varying,
    producto integer NOT NULL,
    serie character varying(255),
    lote character varying(255),
    fecha_vencimiento date,
    almacen integer NOT NULL DEFAULT 1,
    stock numeric(18,4) NOT NULL DEFAULT 0,
    CONSTRAINT articulo_pkey PRIMARY KEY (id),
    CONSTRAINT serieuk UNIQUE (serie),
    CONSTRAINT articulo_almacen_fk FOREIGN KEY (almacen)
        REFERENCES logistica.almacen (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT productoarticulofk FOREIGN KEY (producto)
        REFERENCES logistica.producto (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

--para crear las tablas de ordenes
CREATE TABLE IF NOT EXISTS logistica.orden
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    estado character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'C'::character varying,
    proveedor integer NOT NULL,
    cliente integer NOT NULL,
    cliente_string character varying COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    direccion_proveedor character varying COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    direccion_cliente character varying COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    fecha timestamp without time zone NOT NULL,
    fecha_entrega timestamp without time zone NOT NULL,
    sucursal integer NOT NULL,
    tipo character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    numero integer NOT NULL,
    moneda integer NOT NULL DEFAULT 1,
    tipo_cambio numeric(18,4) NOT NULL DEFAULT 1,
    forma_pago integer NOT NULL,
    dias_credito integer NOT NULL DEFAULT 0,
    total numeric(18,4) NOT NULL DEFAULT 0,
    total_cobrado numeric(18,4) NOT NULL DEFAULT 0,
    aprobado_por integer,
    fecha_aprobacion timestamp without time zone,
    atendido_por integer,
    fecha_atencion timestamp without time zone,
    observaciones character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT orden_pkey PRIMARY KEY (id),
    CONSTRAINT ordentiposucursalnumeropk UNIQUE (sucursal, tipo, numero),
    CONSTRAINT ordenaprobadoporfk FOREIGN KEY (aprobado_por)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ordenatendidoporfk FOREIGN KEY (atendido_por)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT ordenclientefk FOREIGN KEY (cliente)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ordenformapagofk FOREIGN KEY (forma_pago)
        REFERENCES public.forma_pago (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ordenmonedafk FOREIGN KEY (moneda)
        REFERENCES public.moneda (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ordenproveedorfk FOREIGN KEY (proveedor)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ordensucursalfk FOREIGN KEY (sucursal)
        REFERENCES empresa.sucursal (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS logistica.orden_det
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    orden integer NOT NULL,
    producto integer NOT NULL,
    cantidad numeric(18,4) NOT NULL DEFAULT 0,
    precio_unitario numeric(18,4) NOT NULL DEFAULT 0,
    total numeric(18,4) NOT NULL DEFAULT 0,
    unidad integer NOT NULL,
    observaciones character varying COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT orden_det_pkey PRIMARY KEY (id),
    CONSTRAINT orden_det_orden_fkey FOREIGN KEY (orden)
        REFERENCES logistica.orden (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT orden_det_producto_fkey FOREIGN KEY (producto)
        REFERENCES logistica.producto (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT orden_det_unidad_fkey FOREIGN KEY (unidad)
        REFERENCES logistica.unidad (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
CREATE TABLE IF NOT EXISTS logistica.orden_art
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    orden integer NOT NULL,
    articulo integer NOT NULL,
    movimiento character varying(1) COLLATE pg_catalog."default" NOT NULL DEFAULT 'E'::character varying,
    observaciones character varying COLLATE pg_catalog."default" NOT NULL,
    cantidad numeric(18,4) NOT NULL DEFAULT 0,
    CONSTRAINT orden_art_pkey PRIMARY KEY (id),
    CONSTRAINT orden_art_mov_uk UNIQUE (orden,articulo,movimiento),
    CONSTRAINT orden_art_articulo_fkey FOREIGN KEY (articulo)
        REFERENCES logistica.articulo (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT orden_art_orden_fkey FOREIGN KEY (orden)
        REFERENCES logistica.orden (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);


CREATE TABLE IF NOT EXISTS logistica.cotizacion
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    cliente integer NOT NULL,
    cliente_string character varying COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    direccion_cliente character varying COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    fecha timestamp without time zone NOT NULL,
    fecha_entrega date NOT NULL,
    sucursal integer NOT NULL,
    numero integer NOT NULL,
    moneda integer NOT NULL DEFAULT 1,
    tipo_cambio numeric(18,4) NOT NULL DEFAULT 1,
    forma_pago integer NOT NULL,
    dias_credito integer NOT NULL DEFAULT 0,
    total numeric(18,4) NOT NULL DEFAULT 0,
    observaciones character varying COLLATE pg_catalog."default" NOT NULL,
    orden integer,
    fecha_atencion timestamp without time zone,
    encargado integer NOT NULL DEFAULT '-1'::integer,
    CONSTRAINT cotizacion_pkey PRIMARY KEY (id),
    CONSTRAINT cotizacionsucursalnumeropk UNIQUE (sucursal, numero),
    CONSTRAINT cotizacion_encargado_persona_fk FOREIGN KEY (encargado)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacionclientefk FOREIGN KEY (cliente)
        REFERENCES persona.persona (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacionformapagofk FOREIGN KEY (forma_pago)
        REFERENCES public.forma_pago (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacionmonedafk FOREIGN KEY (moneda)
        REFERENCES public.moneda (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacionordenfk FOREIGN KEY (orden)
        REFERENCES logistica.orden (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacionsucursalfk FOREIGN KEY (sucursal)
        REFERENCES empresa.sucursal (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS logistica.cotizacion
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS logistica.cotizacion_det
(
    id serial NOT NULL,
    creado timestamp without time zone NOT NULL DEFAULT now(),
    creador character varying(255) COLLATE pg_catalog."default" NOT NULL DEFAULT '-'::character varying,
    activo boolean NOT NULL DEFAULT true,
    cotizacion integer NOT NULL,
    producto integer NOT NULL,
    cantidad numeric(18,4) NOT NULL DEFAULT 0,
    precio_unitario numeric(18,4) NOT NULL DEFAULT 0,
    total numeric(18,4) NOT NULL DEFAULT 0,
    unidad integer NOT NULL,
    observaciones character varying COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT cotizacion_det_pkey PRIMARY KEY (id),
    CONSTRAINT cotizacion_det_orden_fkey FOREIGN KEY (cotizacion)
        REFERENCES logistica.cotizacion (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacion_det_producto_fkey FOREIGN KEY (producto)
        REFERENCES logistica.producto (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cotizacion_det_unidad_fkey FOREIGN KEY (unidad)
        REFERENCES logistica.unidad (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS logistica.cotizacion_det
    OWNER to postgres;

--ALTER TABLES ADD OR UPDATE COLUMNS
ALTER TABLE IF EXISTS logistica.orden ADD COLUMN IF NOT EXISTS almacen_origen integer NOT NULL;
ALTER TABLE IF EXISTS logistica.orden ADD COLUMN IF NOT EXISTS almacen_destino integer NOT NULL;

--ALTER TABLES FOREIGN KEYS
ALTER TABLE IF EXISTS logistica.orden drop constraint if exists orden_almacen_origen_fk;
ALTER TABLE IF EXISTS logistica.orden
    ADD CONSTRAINT orden_almacen_origen_fk FOREIGN KEY (almacen_origen)
    REFERENCES logistica.almacen (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE IF EXISTS logistica.orden drop constraint if exists orden_almacen_destino_fk;
ALTER TABLE IF EXISTS logistica.orden
    ADD CONSTRAINT orden_almacen_destino_fk FOREIGN KEY (almacen_destino)
    REFERENCES logistica.almacen (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE IF EXISTS logistica.orden ADD COLUMN if not exists encargado integer NOT NULL DEFAULT '-1'::integer;
ALTER TABLE IF EXISTS logistica.orden drop constraint if exists orden_encargado_persona_fk;
ALTER TABLE IF EXISTS logistica.orden
    ADD CONSTRAINT orden_encargado_persona_fk FOREIGN KEY (encargado)
    REFERENCES persona.persona (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
ALTER TABLE IF EXISTS logistica.articulo ADD COLUMN if not exists almacen integer NOT NULL DEFAULT 1;
